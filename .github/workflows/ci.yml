name: CI

on: push

env:
  RUST_BACKTRACE: 1
  YARN_CACHE_FOLDER: /tmp/.cache/yarn

jobs:

  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v1
        if: ${{ !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: cargo lint

  rustfmt:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - run: make cargo.fmt check=yes

  eslint:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: restreamer
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}

      - uses: actions/cache@v1
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ matrix.component }}-${{ hashFiles(
                        format('components/{0}/yarn.lock', matrix.component)) }}
          restore-keys: ${{ runner.os }}-yarn-${{ matrix.component }}-
        if: ${{ matrix.if
                && !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: yarn install --pure-lockfile --non-interactive
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if }}

      - run: yarn lint
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if }}




  #########
  # Tests #
  #########

  test-unit-rust:
    name: Rust unit tests
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        include:
          - crate: log
            if: true
          - crate: serde
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - crate: api-allatra-video
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - crate: restreamer
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - crate: vod-meta-server
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
        if: ${{ matrix.if }}

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.crate }}
        if: ${{ matrix.if
                && !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: cargo test -p ephyr-${{ matrix.crate }} --all-features
        env:
          LIBOPUS_STATIC: 1
        if: ${{ matrix.if }}

  graphql-schema:
    name: GraphQL schema
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/restreamer-v')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        if: ${{ !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: cargo run -p ephyr-restreamer --bin export_schema -- --out-dir=./

      - name: Verify GraphQL schema is up-to-date
        run: diff ./client.graphql.schema.json
                  ./components/restreamer/client.graphql.schema.json
        if: ${{ matrix.if }}




  #################
  # Documentation #
  #################

  rustdoc:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        include:
          - component: restreamer
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - component: vod-meta-server
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
        if: ${{ matrix.if }}

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.component }}
        if: ${{ matrix.if
                && !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: cargo doc -p ephyr-${{ matrix.component }} --all-features
        env:
          LIBOPUS_STATIC: 1
        if: ${{ matrix.if }}

  typedoc:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        include:
          - component: restreamer
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}

      - uses: actions/cache@v1
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ matrix.component }}-${{ hashFiles(
                        format('components/{0}/yarn.lock', matrix.component)) }}
          restore-keys: ${{ runner.os }}-yarn-${{ matrix.component }}-
        if: ${{ matrix.if
                && !contains(github.event.head_commit.message, '[fresh ci]') }}

      - run: yarn install --pure-lockfile --non-interactive
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if }}

      - run: yarn doc
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if }}




  ##########
  # Docker #
  ##########

  docker:
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/')
            || !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        include:
          - component: restreamer
            export: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                        || github.ref == 'refs/heads/master' }}
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - component: vod-meta-server
            export: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                        || github.ref == 'refs/heads/master' }}
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    env:
      no-cache: ${{ contains(github.event.head_commit.message, '[fresh ci]')
                    || github.ref == 'refs/heads/master'
                    || startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}
      - uses: docker/setup-buildx-action@v1
        if: ${{ matrix.if }}

      - run: make docker.image no-cache=yes tag=build-${{ github.run_number }}
                               comp=${{ matrix.component }}
        if: ${{ matrix.if && env.no-cache == 'true' }}

      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-${{ matrix.component }}-build-{hash}
          restore-keys: docker-${{ matrix.component }}-build-
        continue-on-error: true
        if: ${{ matrix.if && env.no-cache != 'true' }}
      - run: make docker.image no-cache=no tag=build-${{ github.run_number }}
                               comp=${{ matrix.component }}
        if: ${{ matrix.if && env.no-cache != 'true' }}

      - run: make docker.tar to-file=image.tar
                             tags=build-${{ github.run_number }}
                             comp=${{ matrix.component }}
        if: ${{ matrix.if && matrix.export }}
      - uses: actions/upload-artifact@v2
        with:
          name: docker-${{ matrix.component }}-${{ github.run_number }}
          path: image.tar
          retention-days: 1
        if: ${{ matrix.if && matrix.export }}




  #############
  # Releasing #
  #############

  release:
    needs:
      - clippy
      - rustfmt
      - eslint
      - test-unit-rust
      - rustdoc
      - typedoc
      - docker
    if: ${{ github.ref == 'refs/heads/master'
            || startsWith(github.ref, 'refs/tags/') }}
    strategy:
      matrix:
        include:
          - component: restreamer
            if: ${{ startsWith(github.ref, 'refs/tags/restreamer-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
          - component: vod-meta-server
            if: ${{ startsWith(github.ref, 'refs/tags/vod-meta-server-v')
                    || !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.if }}
      - uses: docker/setup-buildx-action@v1
        if: ${{ matrix.if }}

      - uses: actions/download-artifact@v2
        with:
          name: docker-${{ matrix.component }}-${{ github.run_number }}
        if: ${{ matrix.if }}
      - run: make docker.untar from-file=image.tar
        if: ${{ matrix.if }}

      - name: Parse semver versions
        id: semver
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: '^refs/tags/[a-z-]*-v((([0-9]+)\.[0-9]+)\.[0-9]+(-.+)?)$'
        if: ${{ matrix.if
                && startsWith(github.ref, 'refs/tags/') }}

      - name: Verify release version matches Cargo manifest
        run: >-
          test "${{ steps.semver.outputs.group1 }}" \
               == $(grep -m1 'version = "' Cargo.toml | cut -d '"' -f2)
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if
                && startsWith(github.ref, 'refs/tags/') }}

      - name: Verify release version matches NPM manifest
        run: >-
          test "${{ steps.semver.outputs.group1 }}" \
               == $(grep -m1 '  "version": "' package.json | cut -d '"' -f4)
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if
                && startsWith(github.ref, 'refs/tags/')
                && matrix.component == 'restreamer' }}

      - name: Calculate Docker tags
        id: tags
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            if (${{ github.ref == 'refs/heads/master' }}) {
              return 'edge';
            }

            let versions = '${{ steps.semver.outputs.group1 }}';
            if ('${{ steps.semver.outputs.group4 }}' === '') {
              versions += ',${{ steps.semver.outputs.group2 }}';
              if ('${{ steps.semver.outputs.group3 }}' !== '0') {
                versions += ',${{ steps.semver.outputs.group3 }}';
              }
              versions += ',latest';
            }
            return versions;
        if: ${{ matrix.if }}
      - run: make docker.tag of=build-${{ github.run_number }}
                             tags=${{ steps.tags.outputs.result }}
                             comp=${{ matrix.component }}
        if: ${{ matrix.if }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
        if: ${{ matrix.if }}

      - run: make docker.push tags=${{ steps.tags.outputs.result }}
                              comp=${{ matrix.component }}
        if: ${{ matrix.if }}

      - name: Update README on Docker Hub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASS }}
        with:
          provider: dockerhub
          destination_container_repo: allatra/ephyr
          readme_file: README.md
        if: ${{ matrix.if }}

      - name: Parse CHANGELOG link
        id: changelog
        run: echo ::set-output name=link::https://github.com/${{ github.repository }}/blob/${{ matrix.component }}-v${{ steps.semver.outputs.group1 }}/components/${{ matrix.component }}/CHANGELOG.md#$(sed -n '/^## \[${{ steps.semver.outputs.group1 }}\]/{s/^## \[\(.*\)\][^0-9]*\([0-9].*\)/\1--\2/;s/[^0-9a-z-]*//g;p;}' CHANGELOG.md)
        working-directory: components/${{ matrix.component }}
        if: ${{ matrix.if
                && startsWith(github.ref, 'refs/tags/') }}
      - name: Release on GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: >-
            ${{ matrix.component }}-v${{ steps.semver.outputs.group1 }}
          release_name: >-
            ${{ matrix.component }} ${{ steps.semver.outputs.group1 }}
          body: |
            [Changelog](${{ steps.changelog.outputs.link }})
          prerelease: ${{ steps.semver.outputs.group4 != '' }}
        if: ${{ matrix.if
                && startsWith(github.ref, 'refs/tags/') }}
